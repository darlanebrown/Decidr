{"version":3,"sources":["assets/images/index.js","assets/images/reload.png","Components/AddItem.js","App.js","reportWebVitals.js","index.js"],"names":["images","reload","AddItem","listContainer","setListContainer","onRefresh","useState","newItem","setNewItem","style","flex","display","alignItems","justifyContent","type","onClick","src","width","height","alt","id","className","value","onChange","event","target","placeholder","preventDefault","trim","includes","alert","App","allItems","setAllItems","selectedIndex","setSelectedIndex","selectedItem","setSelectedItem","selectItem","length","randomIndex","Math","floor","random","e","undefined","Boolean","map","entry","i","flexDirection","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAEaA,EAAS,CACpBC,OCHa,IAA0B,oC,OCG1B,SAASC,EAAT,GAIX,IAHFC,EAGC,EAHDA,cACAC,EAEC,EAFDA,iBACAC,EACC,EADDA,UAEA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OACE,sBAAMC,MAAO,CAAEC,KAAM,GAArB,SACE,sBACED,MAAO,CACLC,KAAM,EACNC,QAAS,OACTC,WAAY,SACZC,eAAgB,iBALpB,UAQE,wBACEC,KAAK,SACLL,MACE,GAMFM,QAASV,EATX,SAWE,qBACEW,IAAKhB,EAAOC,OACZQ,MAAO,CACLQ,MAAO,OACPC,OAAQ,QAEVC,IAAI,aAGR,uBACEC,GAAG,WACHC,UAAU,uCACVC,MAAOf,EACPgB,SAAU,SAACC,GAAD,OAAWhB,EAAWgB,EAAMC,OAAOH,QAC7CI,YAAY,gBAEd,wBAAQL,UAAU,kBAAkBN,QAnDvB,SAACS,GAClBA,EAAMG,iBACFpB,EAAQqB,OACNzB,EAAc0B,SAAStB,GACzBuB,MAAM,kEAEN1B,EAAiB,GAAD,mBAAKD,GAAL,CAAoBI,KACpCC,EAAW,KAGbsB,MAAM,oDAyCqDhB,KAAK,SAA9D,2BC2BOiB,MAnFf,WACE,MAAgCzB,mBAAS,IAAzC,mBAAO0B,EAAP,KAAiBC,EAAjB,KACA,EAA0C3B,mBAAS,GAAnD,mBAAO4B,EAAP,KAAsBC,EAAtB,KACA,EAAwC7B,mBAAS,IAAjD,mBAAO8B,EAAP,KAAqBC,EAArB,KAEMC,EAAa,SAAbA,IACJ,GAAIN,EAASO,OAAS,EACpB,GAAwB,IAApBP,EAASO,OAGXJ,EAAiB,GACjBE,EAAgBL,EAAS,IACzBF,MACE,mFAEG,CACL,IAAMU,EAAcC,KAAKC,MAAMD,KAAKE,SAAWX,EAASO,QACpDC,IAAgBN,EAKlBI,KAEAH,EAAiBK,GACjBH,EAAgBL,EAASQ,UAK7BV,MAAM,qCAIV,OACE,sBAAKT,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,0CAEF,sBAAKA,UAAU,gBAAf,UACE,cAACnB,EAAD,CACEE,iBAAkB6B,EAClB9B,cAAe6B,EACf3B,UAAW,SAACuC,GACVA,EAAEjB,iBACFU,OAAgBQ,GAChBV,OAAiBU,MAGpBC,SAASV,IACR,qBAAKf,UAAU,yBAAf,SACGW,EAASe,KAAI,SAACC,EAAOC,GAAR,OACZ,sBAEExC,MAAO,CACLE,QAAS,OACTuC,cAAe,MACftC,WAAY,SACZC,eAAgB,iBANpB,UASE,4BAAImC,IACJ,wBACE3B,UAAU,kBACVN,QAAS,kBACPkB,EAAYD,EAASmB,QAAO,SAACF,GAAD,OAAOA,IAAMD,OAH7C,0BATKC,QAqBb,wBAAQ5B,UAAU,kBAAkBN,QAAS,kBAAMuB,KAAnD,4BAGCF,GAAgB,4BAAIA,WCtEdgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2ece57a0.chunk.js","sourcesContent":["import reload from \"./reload.png\";\n\nexport const images = {\n  reload,\n};\n","export default __webpack_public_path__ + \"static/media/reload.f84ab27a.png\";","import { useState } from \"react\";\nimport { images } from \"../assets/images\";\n\nexport default function AddItem({\n  listContainer,\n  setListContainer,\n  onRefresh,\n}) {\n  const [newItem, setNewItem] = useState(\"\");\n\n  const formSubmit = (event) => {\n    event.preventDefault();\n    if (newItem.trim()) {\n      if (listContainer.includes(newItem)) {\n        alert(\"We already have this item in the list. Please add another one\");\n      } else {\n        setListContainer([...listContainer, newItem]);\n        setNewItem(\"\");\n      }\n    } else {\n      alert(\"Nothing added, Did you forget to add something?\");\n    }\n  };\n\n  return (\n    <form style={{ flex: 1 }}>\n      <div\n        style={{\n          flex: 1,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <button\n          type=\"button\"\n          style={\n            {\n              // display: 'none',\n              // flex: 1,\n              // alignSelf: 'flex-start',\n            }\n          }\n          onClick={onRefresh}\n        >\n          <img\n            src={images.reload}\n            style={{\n              width: \"32px\",\n              height: \"32px\",\n            }}\n            alt=\"reload\"\n          />\n        </button>\n        <input\n          id=\"add-item\"\n          className=\"form-control form-control-full-width\"\n          value={newItem}\n          onChange={(event) => setNewItem(event.target.value)}\n          placeholder=\"Add an item\"\n        />\n        <button className=\"btn btn-primary\" onClick={formSubmit} type=\"submit\">\n          Add Item\n        </button>\n      </div>\n    </form>\n  );\n}\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport AddItem from \"./Components/AddItem\";\nimport { images } from \"./assets/images\";\n\nfunction App() {\n  const [allItems, setAllItems] = useState([]);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [selectedItem, setSelectedItem] = useState(\"\");\n\n  const selectItem = () => {\n    if (allItems.length > 0) {\n      if (allItems.length === 1) {\n        // if we have only one item then we cannot have different item on each click.\n        // We'll set the item though but also alert the user to add more items\n        setSelectedIndex(0);\n        setSelectedItem(allItems[0]);\n        alert(\n          \"We recommend adding at least two items to have different item on each click\"\n        );\n      } else {\n        const randomIndex = Math.floor(Math.random() * allItems.length);\n        if (randomIndex === selectedIndex) {\n          // if new random number is equal to previously selected index then we won't be able to have a different on some clicks.\n          // To avoid similarity in selected item we'll re-call the function to get a different index\n\n          // this approach is called recursion\n          selectItem();\n        } else {\n          setSelectedIndex(randomIndex);\n          setSelectedItem(allItems[randomIndex]);\n          //setAllItems([]);\n        }\n      }\n    } else {\n      alert(\"Add items to select an item from\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>DECIDR</h2>\n      </header>\n      <div className=\"app-container\">\n        <AddItem\n          setListContainer={setAllItems}\n          listContainer={allItems}\n          onRefresh={(e) => {\n            e.preventDefault();\n            setSelectedItem(undefined);\n            setSelectedIndex(undefined);\n          }}\n        />\n        {Boolean(!selectedItem) && (\n          <div className=\"list-display-container\">\n            {allItems.map((entry, i) => (\n              <div\n                key={i}\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <p>{entry}</p>\n                <button\n                  className=\"btn btn-warning\"\n                  onClick={() =>\n                    setAllItems(allItems.filter((i) => i !== entry))\n                  }\n                >\n                  eighty-six\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n        <button className=\"btn btn-primary\" onClick={() => selectItem()}>\n          Select an Item\n        </button>\n        {selectedItem && <p>{selectedItem}</p>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}